use Test;
use Array::Sorted::Util;

plan 2;

subtest "finds on simple Instant list" =>  {
    my @a;
    for ^10 {
        @a.push(now);
        sleep .1;
    }
    plan @a + 2;

    for @a.kv -> $i, $instant {
        is finds(@a, $instant), $i, "did we find '$instant'";
    }

    for Instant.from-posix(0), Instant.from-posix(time + 100) {
        is-deeply finds(@a, $_), Nil, "did we not find '$_'";
    }
}

subtest "inserts on an empty list" => {
    my @a;
    for ^10 {
        @a.push(now);
        sleep .1;
    }
    my @b;

    plan @a + 1;

    for @a.clone.pick(*) {
        is-deeply inserts(@b,$_), @b, "inserting '$_'";
    }
    is-deeply @b, @a, "did we get a correctly sorted list";
}

# vim: expandtab shiftwidth=4
