use Test;
use Array::Sorted::Util;

plan 2;

my @instants;
for ^10 {
    @instants.push(now);
    sleep .1;
}

subtest "finds on simple Instant list" =>  {
    my @a = @instants;
    plan @a + 2;

    for @a.kv -> $i, $instant {
        is finds(@a, $instant), $i, "did we find '$instant'";
    }

    for Instant.from-posix(0), Instant.from-posix(time + 100) {
        nok finds(@a, $_).defined, "did we not find '$_'";
    }
}

subtest "inserts on an empty list" => {
    my @a = @instants;
    my @b;

    plan @a + 2;

    for @a.kv -> $i, $value {
        is inserts(@b,$value).Int, $i, "inserted ok at $i";
    }
    is-deeply @b, @a, "did we get a correctly sorted list (1)";

    inserts(@b,$_) for @a.clone.pick(*);
    is-deeply @b, @a, "did we get a correctly sorted list (2)";
}

# vim: expandtab shiftwidth=4
